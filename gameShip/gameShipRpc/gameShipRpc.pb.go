// Code generated by protoc-gen-go.
// source: gameShipRpc.proto
// DO NOT EDIT!

/*
Package gameShipRpc is a generated protocol buffer package.

It is generated from these files:
	gameShipRpc.proto

It has these top-level messages:
	NewGameRequest
	NewGameResponse
	PlayerJoinRequest
	PlayerJoinResponse
	PlayerStrikeBoxRequest
	PlayerStrikeBoxResponse
	GameStartRequest
	GameStartResponse
*/
package gameShipRpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NewGameRequest struct {
	CreatorId string `protobuf:"bytes,1,opt,name=creatorId" json:"creatorId,omitempty"`
}

func (m *NewGameRequest) Reset()                    { *m = NewGameRequest{} }
func (m *NewGameRequest) String() string            { return proto.CompactTextString(m) }
func (*NewGameRequest) ProtoMessage()               {}
func (*NewGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NewGameRequest) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

type NewGameResponse struct {
	GameId    string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
	CreatorId string `protobuf:"bytes,2,opt,name=creatorId" json:"creatorId,omitempty"`
}

func (m *NewGameResponse) Reset()                    { *m = NewGameResponse{} }
func (m *NewGameResponse) String() string            { return proto.CompactTextString(m) }
func (*NewGameResponse) ProtoMessage()               {}
func (*NewGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NewGameResponse) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *NewGameResponse) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

type PlayerJoinRequest struct {
	PlayerId string `protobuf:"bytes,1,opt,name=playerId" json:"playerId,omitempty"`
	GameId   string `protobuf:"bytes,2,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *PlayerJoinRequest) Reset()                    { *m = PlayerJoinRequest{} }
func (m *PlayerJoinRequest) String() string            { return proto.CompactTextString(m) }
func (*PlayerJoinRequest) ProtoMessage()               {}
func (*PlayerJoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PlayerJoinRequest) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerJoinRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type PlayerJoinResponse struct {
	PlayerId string `protobuf:"bytes,1,opt,name=playerId" json:"playerId,omitempty"`
	GameId   string `protobuf:"bytes,2,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *PlayerJoinResponse) Reset()                    { *m = PlayerJoinResponse{} }
func (m *PlayerJoinResponse) String() string            { return proto.CompactTextString(m) }
func (*PlayerJoinResponse) ProtoMessage()               {}
func (*PlayerJoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PlayerJoinResponse) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerJoinResponse) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type PlayerStrikeBoxRequest struct {
	PlayerId string `protobuf:"bytes,1,opt,name=playerId" json:"playerId,omitempty"`
	GameId   string `protobuf:"bytes,2,opt,name=gameId" json:"gameId,omitempty"`
	Row      int32  `protobuf:"varint,3,opt,name=row" json:"row,omitempty"`
	Column   int32  `protobuf:"varint,4,opt,name=column" json:"column,omitempty"`
}

func (m *PlayerStrikeBoxRequest) Reset()                    { *m = PlayerStrikeBoxRequest{} }
func (m *PlayerStrikeBoxRequest) String() string            { return proto.CompactTextString(m) }
func (*PlayerStrikeBoxRequest) ProtoMessage()               {}
func (*PlayerStrikeBoxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PlayerStrikeBoxRequest) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerStrikeBoxRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *PlayerStrikeBoxRequest) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *PlayerStrikeBoxRequest) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

type PlayerStrikeBoxResponse struct {
	PlayerId string `protobuf:"bytes,1,opt,name=playerId" json:"playerId,omitempty"`
	GameId   string `protobuf:"bytes,2,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *PlayerStrikeBoxResponse) Reset()                    { *m = PlayerStrikeBoxResponse{} }
func (m *PlayerStrikeBoxResponse) String() string            { return proto.CompactTextString(m) }
func (*PlayerStrikeBoxResponse) ProtoMessage()               {}
func (*PlayerStrikeBoxResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PlayerStrikeBoxResponse) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerStrikeBoxResponse) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type GameStartRequest struct {
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *GameStartRequest) Reset()                    { *m = GameStartRequest{} }
func (m *GameStartRequest) String() string            { return proto.CompactTextString(m) }
func (*GameStartRequest) ProtoMessage()               {}
func (*GameStartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GameStartRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type GameStartResponse struct {
	GameId   string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=playerId" json:"playerId,omitempty"`
}

func (m *GameStartResponse) Reset()                    { *m = GameStartResponse{} }
func (m *GameStartResponse) String() string            { return proto.CompactTextString(m) }
func (*GameStartResponse) ProtoMessage()               {}
func (*GameStartResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GameStartResponse) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GameStartResponse) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func init() {
	proto.RegisterType((*NewGameRequest)(nil), "gameShipRpc.NewGameRequest")
	proto.RegisterType((*NewGameResponse)(nil), "gameShipRpc.NewGameResponse")
	proto.RegisterType((*PlayerJoinRequest)(nil), "gameShipRpc.PlayerJoinRequest")
	proto.RegisterType((*PlayerJoinResponse)(nil), "gameShipRpc.PlayerJoinResponse")
	proto.RegisterType((*PlayerStrikeBoxRequest)(nil), "gameShipRpc.PlayerStrikeBoxRequest")
	proto.RegisterType((*PlayerStrikeBoxResponse)(nil), "gameShipRpc.PlayerStrikeBoxResponse")
	proto.RegisterType((*GameStartRequest)(nil), "gameShipRpc.GameStartRequest")
	proto.RegisterType((*GameStartResponse)(nil), "gameShipRpc.GameStartResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GameShipRpc service

type GameShipRpcClient interface {
	NewGame(ctx context.Context, in *NewGameRequest, opts ...grpc.CallOption) (*NewGameResponse, error)
	PlayerJoin(ctx context.Context, in *PlayerJoinRequest, opts ...grpc.CallOption) (*PlayerJoinResponse, error)
	PlayerStrikeBox(ctx context.Context, in *PlayerStrikeBoxRequest, opts ...grpc.CallOption) (*PlayerStrikeBoxResponse, error)
	GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GameStartResponse, error)
}

type gameShipRpcClient struct {
	cc *grpc.ClientConn
}

func NewGameShipRpcClient(cc *grpc.ClientConn) GameShipRpcClient {
	return &gameShipRpcClient{cc}
}

func (c *gameShipRpcClient) NewGame(ctx context.Context, in *NewGameRequest, opts ...grpc.CallOption) (*NewGameResponse, error) {
	out := new(NewGameResponse)
	err := grpc.Invoke(ctx, "/gameShipRpc.gameShipRpc/NewGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameShipRpcClient) PlayerJoin(ctx context.Context, in *PlayerJoinRequest, opts ...grpc.CallOption) (*PlayerJoinResponse, error) {
	out := new(PlayerJoinResponse)
	err := grpc.Invoke(ctx, "/gameShipRpc.gameShipRpc/PlayerJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameShipRpcClient) PlayerStrikeBox(ctx context.Context, in *PlayerStrikeBoxRequest, opts ...grpc.CallOption) (*PlayerStrikeBoxResponse, error) {
	out := new(PlayerStrikeBoxResponse)
	err := grpc.Invoke(ctx, "/gameShipRpc.gameShipRpc/PlayerStrikeBox", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameShipRpcClient) GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GameStartResponse, error) {
	out := new(GameStartResponse)
	err := grpc.Invoke(ctx, "/gameShipRpc.gameShipRpc/GameStart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GameShipRpc service

type GameShipRpcServer interface {
	NewGame(context.Context, *NewGameRequest) (*NewGameResponse, error)
	PlayerJoin(context.Context, *PlayerJoinRequest) (*PlayerJoinResponse, error)
	PlayerStrikeBox(context.Context, *PlayerStrikeBoxRequest) (*PlayerStrikeBoxResponse, error)
	GameStart(context.Context, *GameStartRequest) (*GameStartResponse, error)
}

func RegisterGameShipRpcServer(s *grpc.Server, srv GameShipRpcServer) {
	s.RegisterService(&_GameShipRpc_serviceDesc, srv)
}

func _GameShipRpc_NewGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameShipRpcServer).NewGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gameShipRpc.gameShipRpc/NewGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameShipRpcServer).NewGame(ctx, req.(*NewGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameShipRpc_PlayerJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameShipRpcServer).PlayerJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gameShipRpc.gameShipRpc/PlayerJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameShipRpcServer).PlayerJoin(ctx, req.(*PlayerJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameShipRpc_PlayerStrikeBox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerStrikeBoxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameShipRpcServer).PlayerStrikeBox(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gameShipRpc.gameShipRpc/PlayerStrikeBox",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameShipRpcServer).PlayerStrikeBox(ctx, req.(*PlayerStrikeBoxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameShipRpc_GameStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameShipRpcServer).GameStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gameShipRpc.gameShipRpc/GameStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameShipRpcServer).GameStart(ctx, req.(*GameStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameShipRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gameShipRpc.gameShipRpc",
	HandlerType: (*GameShipRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewGame",
			Handler:    _GameShipRpc_NewGame_Handler,
		},
		{
			MethodName: "PlayerJoin",
			Handler:    _GameShipRpc_PlayerJoin_Handler,
		},
		{
			MethodName: "PlayerStrikeBox",
			Handler:    _GameShipRpc_PlayerStrikeBox_Handler,
		},
		{
			MethodName: "GameStart",
			Handler:    _GameShipRpc_GameStart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gameShipRpc.proto",
}

func init() { proto.RegisterFile("gameShipRpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x93, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x43, 0x51, 0xb4, 0x63, 0x22, 0x30, 0x07, 0x6c, 0x2a, 0x22, 0xa9, 0x1e, 0x88, 0x87,
	0x1e, 0xf4, 0x0d, 0x8c, 0x09, 0x4a, 0x82, 0x31, 0xed, 0xd5, 0x4b, 0xad, 0x1b, 0x6d, 0xa4, 0xdd,
	0xba, 0x5d, 0x44, 0xdf, 0xd1, 0x87, 0x32, 0x2d, 0xcb, 0xb2, 0xdb, 0x52, 0x4d, 0xe4, 0xd6, 0x99,
	0xf9, 0xf7, 0x9b, 0xd9, 0xfd, 0xa7, 0xd0, 0x7d, 0x09, 0x62, 0xe2, 0xbf, 0x46, 0xa9, 0x97, 0x86,
	0x6e, 0xca, 0x28, 0xa7, 0x78, 0xa0, 0xa4, 0x1c, 0x17, 0x0e, 0xef, 0xc9, 0x62, 0x1c, 0xc4, 0xc4,
	0x23, 0xef, 0x73, 0x92, 0x71, 0xec, 0x83, 0x19, 0x32, 0x12, 0x70, 0xca, 0xee, 0x9e, 0xad, 0xc6,
	0xb0, 0x31, 0x32, 0xbd, 0x75, 0xc2, 0x19, 0x43, 0x5b, 0xea, 0xb3, 0x94, 0x26, 0x19, 0xc1, 0x1e,
	0xb4, 0x72, 0xa2, 0x54, 0x8b, 0x48, 0x07, 0x19, 0x55, 0x50, 0xf7, 0x61, 0x16, 0x7c, 0x11, 0x36,
	0xa1, 0x51, 0xb2, 0xea, 0x6d, 0xc3, 0x7e, 0x5a, 0x24, 0x25, 0x4c, 0xc6, 0x4a, 0x1b, 0x43, 0x6d,
	0xe3, 0xdc, 0x02, 0xaa, 0x20, 0x31, 0xd4, 0x7f, 0x48, 0x1f, 0xd0, 0x5b, 0x92, 0x7c, 0xce, 0xa2,
	0x37, 0x72, 0x4d, 0x3f, 0xb7, 0x98, 0x0b, 0x3b, 0xd0, 0x64, 0x74, 0x61, 0x35, 0x87, 0x8d, 0xd1,
	0xae, 0x97, 0x7f, 0xe6, 0xca, 0x90, 0xce, 0xe6, 0x71, 0x62, 0xed, 0x14, 0x49, 0x11, 0x39, 0x53,
	0x38, 0xaa, 0xf4, 0xdd, 0xe2, 0x1a, 0x17, 0xd0, 0xc9, 0xfd, 0xf1, 0x79, 0xc0, 0xf8, 0xea, 0x02,
	0x35, 0x1e, 0xe5, 0x2e, 0x28, 0xda, 0x3f, 0x0c, 0x55, 0x87, 0x31, 0xf4, 0x61, 0x2e, 0xbf, 0x0d,
	0x50, 0xf7, 0x0a, 0x6f, 0x60, 0x4f, 0xec, 0x09, 0x1e, 0xbb, 0xea, 0x0e, 0xea, 0xdb, 0x66, 0xf7,
	0x37, 0x17, 0xc5, 0x24, 0x53, 0x80, 0xb5, 0xb7, 0x38, 0xd0, 0xb4, 0x95, 0xed, 0xb1, 0x4f, 0x6b,
	0xeb, 0x02, 0xf7, 0x08, 0xed, 0xd2, 0x43, 0xe3, 0xd9, 0x86, 0x33, 0x65, 0xfb, 0xed, 0xf3, 0xdf,
	0x45, 0x82, 0x3e, 0x01, 0x53, 0xbe, 0x25, 0x9e, 0x68, 0x47, 0xca, 0x7e, 0xd8, 0x83, 0xba, 0xf2,
	0x92, 0xf5, 0xd4, 0x2a, 0x7e, 0xd5, 0xab, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x85, 0x34,
	0x1b, 0xbf, 0x03, 0x00, 0x00,
}
